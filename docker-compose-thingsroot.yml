version: "3"

services:
  traefik:
    image: "traefik:v2.2"
    command:
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    labels:
      # enable traefik
      - "traefik.enable=true"
      # global redirect to https for production only
      - "${HTTPS_REDIRECT_RULE_LABEL}"
      - "${HTTPS_REDIRECT_ENTRYPOINT_LABEL}"
      - "${HTTPS_REDIRECT_MIDDLEWARE_LABEL}"
      # middleware redirect for production only
      - "${HTTPS_USE_REDIRECT_MIDDLEWARE_LABEL}"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - cert-vol:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  thingsroot-nginx:
    image: thingsroot/thingsroot-nginx:${THINGSROOT_VERSION}
    restart: on-failure
    environment:
      - FRAPPE_PY=thingsroot-python
      - FRAPPE_PY_PORT=8000
      - FRAPPE_SOCKETIO=frappe-socketio
      - SOCKETIO_PORT=9000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.thingsroot-nginx.rule=Host(${SITES})"
      - "${ENTRYPOINT_LABEL}"
      - "${CERT_RESOLVER_LABEL}"
      - "traefik.http.services.thingsroot-nginx.loadbalancer.server.port=80"
    volumes:
      - sites-vol:/var/www/html/sites:rw
      - assets-vol:/assets:rw

  thingsroot-python:
    image: thingsroot/thingsroot-worker:${THINGSROOT_VERSION}
    restart: on-failure
    environment:
      - MARIADB_HOST=${MARIADB_HOST}
      - REDIS_CACHE=redis-cache:6379
      - REDIS_QUEUE=redis-queue:6379
      - REDIS_SOCKETIO=redis-socketio:6379
      - SOCKETIO_PORT=9000
      - AUTO_MIGRATE=1
    volumes:
      - sites-vol:/home/frappe/frappe-bench/sites:rw
      - assets-vol:/home/frappe/frappe-bench/sites/assets:rw

  thingsroot-services:
    image: thingsroot/thignsroot-services:$(THINGSROOT_VERSION}
    restart: on-failure
    depends_on:
      - thingsroot-python
      - emqx-thingsroot
      - redis-thingsroot
      - influxdb-thingsroot
    environment:
      - FRAPPE_PY=thingsroot-python
      - FRAPPE_PY_PORT=8000
      - FRAPPE_AUTH_CODE=${FRAPPE_AUTH_CODE}
      - MQTT_HOST=emqx-thingsroot
      - MQTT_USER=${MQTT_USER}
      - MQTT_PASSWORD=${MQTT_PASSWORD}
      - INFLUXDB_HOST=influxdb-thingsroot
      - INFLUXDB_USER=${INFLUXDB_USER}
      - INFLUXDB_PASSWORD=${INFLUXDB_PASSWORD}
      - REDIS_HOST=redis-thingsroot
    volumes:
      - thingsroot-services-vol:/home/frappe/services/logs:rw

  frappe-socketio:
    image: frappe/frappe-socketio:${FRAPPE_VERSION}
    restart: on-failure
    depends_on:
      - redis-socketio
    volumes:
      - sites-vol:/home/frappe/frappe-bench/sites:rw

  thingsroot-worker-default:
    image: thingsroot/thingsroot-worker:${THINGSROOT_VERSION}
    restart: on-failure
    command: worker
    depends_on:
      - redis-queue
      - redis-cache
    volumes:
      - sites-vol:/home/frappe/frappe-bench/sites:rw

  thingsroot-worker-short:
    image: thingsroot/thingsroot-worker:${THINGSROOT_VERSION}
    restart: on-failure
    command: worker
    environment:
      - WORKER_TYPE=short
    depends_on:
      - redis-queue
      - redis-cache
    volumes:
      - sites-vol:/home/frappe/frappe-bench/sites:rw

  thingsroot-worker-long:
    image: thingsroot/thingsroot-worker:${THINGSROOT_VERSION}
    restart: on-failure
    command: worker
    environment:
      - WORKER_TYPE=long
    depends_on:
      - redis-queue
      - redis-cache
    volumes:
      - sites-vol:/home/frappe/frappe-bench/sites:rw

  thingsroot-schedule:
    image: thingsroot/thingsroot-worker:${THINGSROOT_VERSION}
    restart: on-failure
    command: schedule
    depends_on:
      - redis-queue
      - redis-cache
    volumes:
      - sites-vol:/home/frappe/frappe-bench/sites:rw

  redis-cache:
    image: redis:latest
    restart: on-failure
    volumes:
      - redis-cache-vol:/data

  redis-queue:
    image: redis:latest
    restart: on-failure
    volumes:
      - redis-queue-vol:/data

  redis-socketio:
    image: redis:latest
    restart: on-failure
    volumes:
      - redis-socketio-vol:/data

  redis-thingsroot:
    image: redis:latest
    restart: on-failure
    volumes:
      - redis-thingsroot-vol:/data

  influxdb-thingsroot:
    image: influxdb:latest
    restart: on-failure
    environment:
      - INFLUXDB_ADMIN_USER=${INFLUXDB_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD}
    volumes:
      - influxdb-thingsroot-vol:/var/lib/influxdb:rw

  chronograf-thingsroot:
    image: chronograf:latest
    restart: on-failure
    depends_on:
      - influxdb-thingsroot
    ports:
      - "8888:8888"
    volumes:
      - chronograf-thingsroot-vol:/var/lib/chronograf:rw

  emqx-thingsroot:
    image: emqx/emqx:latest
    restart: on-failure
    depends_on:
      - thingsroot-python
    environment:
      - EMQX_ADMIN_PASSWORD=${MQTT_DASHBOARD_PASSWORD}
      - EMQX_LOADED_PLUGINS="emqx_management | emqx_auth_http | emqx_recon | emqx_retainer | emqx_dashboard"
      - EMQX_AUTH__HTTP__AUTH_REQ="http://thingsroot-python:8000/api/method/iot.mqtt_auth_v2.auth"
      - EMQX_AUTH__HTTP__AUTH_REQ__METHOD="get"
      - EMQX_AUTH__HTTP__AUTH_REQ__PARAMS="clientid=%c,username=%u,password=%P"
      - EMQX_AUTH__HTTP__SUPER_REQ="http://thingsroot-python:8000/api/method/iot.mqtt_auth_v2.superuser"
      - EMQX_AUTH__HTTP__SUPER_REQ__METHOD="get"
      - EMQX_AUTH__HTTP__SUPER_REQ__PARAMS="clientid=%c,username=%u"
      - EMQX_AUTH__HTTP__ACL_REQ="http://thingsroot-python:8000/api/method/iot.mqtt_auth_v2.acl"
      - EMQX_AUTH__HTTP__ACL_REQ__METHOD="get"
      - EMQX_AUTH__HTTP__ACL_REQ__PARAMS="access=%A,username=%u,clientid=%c,ipaddr=%a,topic=%t"
    ports:
      - "18083:18083"
      - "1883:1883"
      - "8883:8883"
    volumes:
      - emqx-thingsroot-data-vol:/opt/emqx/data:rw
      - emqx-thingsroot-etc-vol:/opt/emqx/etc:rw
      - emqx-thingsroot-log-vol:/opt/emqx/log:rw

  mariadb:
    image: mariadb:10.3
    restart: on-failure
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./installation/frappe-mariadb.cnf:/etc/mysql/conf.d/frappe.cnf
      - mariadb-vol:/var/lib/mysql

  site-creator:
    image: thingsroot/thingsroot-worker:${THINGSROOT_VERSION}
    restart: "no"
    command: new
    depends_on:
      - thingsroot-python
    environment:
      - SITE_NAME=${SITE_NAME}
      - DB_ROOT_USER=${DB_ROOT_USER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - INSTALL_APPS=${INSTALL_APPS}
    volumes:
      - sites-vol:/home/frappe/frappe-bench/sites:rw

volumes:
  mariadb-vol:
  redis-cache-vol:
  redis-queue-vol:
  redis-socketio-vol:
  redis-thingsroot-vol:
  influxdb-thingsroot-vol:
  chronograf-thingsroot-vol:
  emqx-thingsroot-data-vol:
  emqx-thingsroot-etc-vol:
  emqx-thingsroot-log-vol:
  thingsroot-services-vol:
  assets-vol:
  sites-vol:
  cert-vol:
